{
	"nodes":[
		{"id":"728a519751fc49e3","type":"group","x":-320,"y":-800,"width":748,"height":660,"label":"\bIdea"},
		{"id":"522003b5f37ba1d2","type":"text","text":"##### Idea 1(Query-centric)\n- Hybrid query\n\t- Instance + point query로 3D point coord 예측 -> 2D projection\n- Matching\n\t- 일단 point 포함하는 box와 GT box 간의 IoU\n\t\t- point coord(x, y, z), box coord(cx, cy, cz, w, l, h), vx, vy\n\t- Permutation equivalent matching 일단 그대로 사용하되 새로운 방법 생각해볼 것","x":-300,"y":-780,"width":708,"height":327},
		{"id":"16fb934c9e6960ec","type":"text","text":"##### Idea 2\n- ","x":-300,"y":-440,"width":708,"height":280},
		{"id":"beeec3c2db48b271","type":"text","text":"##### Motivation\n- 현재 online hd map 모델들은 BEV encoder를 사용하여 BEV feature 성능에 모델 성능이 제한\n\t- 오히려 depth supervision으로 성능을 올릴 기회인건가?\n\t\t- 이건 그냥 성능이 어떻게 나오냐에 따라 할 말이 달라질듯\n- Instance의 길이는 instance마다 다른데 instance에 할당된 Points의 개수는 일정함\n\t- Dynamic한 Point design이 필요함\n\t\t- Autoregressive한 구조를 사용할 수 있을 정도로 나머지 모듈의 속도를 끌어올린다","x":-308,"y":-76,"width":748,"height":300},
		{"id":"a0923c580b1ea28d","type":"text","text":"##### Proposed method\n1. Baseline\n\t- Fixed point num(InsightMapper)\n\t- Reg branch로 3개의 output(x, y, z, ~~vx, vy~~)\n2. Perspective view segmentation\n3. 3개의 reg branch output(x, y, z, ~~cx, cy, cz, w, l ,h, vx, vy~~)\n4. DN-DETR\n5. ","x":520,"y":-76,"width":580,"height":536}
	],
	"edges":[
		{"id":"90f62a1915014f00","fromNode":"beeec3c2db48b271","fromSide":"right","toNode":"a0923c580b1ea28d","toSide":"left"}
	]
}